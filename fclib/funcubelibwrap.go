/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: funcubelibwrap.i

package fclib

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;



#cgo LDFLAGS: -l:libfuncube.a -lstdc++ -lpthread -lm -lusb-1.0 -lfftw3f -lportaudio

typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
extern void _wrap_Swig_free_fclib_a388184c668b9ee2(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_fclib_a388184c668b9ee2(swig_intgo arg1);
extern int _wrap_timeGetTime_fclib_a388184c668b9ee2(void);
extern float _wrap_HZ_PER_BIN_get_fclib_a388184c668b9ee2(void);
extern double _wrap_PI_get_fclib_a388184c668b9ee2(void);
extern double _wrap_HALF_PI_get_fclib_a388184c668b9ee2(void);
extern double _wrap_TWO_PI_get_fclib_a388184c668b9ee2(void);
extern void _wrap_LogMessage_fclib_a388184c668b9ee2(swig_intgo arg1, uintptr_t arg2);
extern swig_intgo _wrap_FFTRangeLimit_Off_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_FFTRangeLimit_010_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_FFTRangeLimit_020_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_FFTRangeLimit_040_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_FFTRangeLimit_080_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_FFTRangeLimit_140_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_FFTRangeLimit_200_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_FFTRangeLimit_Slope_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_FFTTunerState_Off_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_FFTTunerState_On_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_FFTTunerState_Lock_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Library_GetVersion_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Library_CheckFftwExists_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Library_SetOnLogMessageCallback_fclib_a388184c668b9ee2(swig_voidp arg1);
extern swig_intgo _wrap_Dongle_Initialize_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Dongle_Shutdown_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Dongle_Exists_fclib_a388184c668b9ee2(void);
extern int _wrap_Dongle_GetFrequency_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Dongle_SetFrequency_fclib_a388184c668b9ee2(int arg1);
extern swig_intgo _wrap_Dongle_BiasTEnable_fclib_a388184c668b9ee2(swig_intgo arg1);
extern swig_intgo _wrap_Decode_Initialize_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Decode_Shutdown_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Decode_EnumDevices_fclib_a388184c668b9ee2(swig_voidp arg1);
extern swig_intgo _wrap_Decode_Start_fclib_a388184c668b9ee2(swig_type_1 arg1, swig_type_2 arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_Decode_StartByIndex_fclib_a388184c668b9ee2(swig_intgo arg1, swig_intgo arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_Decode_Stop_fclib_a388184c668b9ee2(void);
extern void _wrap_Decode_SetManualTuneFrequency_fclib_a388184c668b9ee2(float arg1);
extern void _wrap_Decode_SetAutoTuneFrequencyRange_fclib_a388184c668b9ee2(float arg1, float arg2);
extern swig_intgo _wrap_Decode_CollectFftOutput_fclib_a388184c668b9ee2(swig_voidp arg1, swig_voidp arg2);
extern swig_intgo _wrap_Decode_CollectFftOutputByRange_fclib_a388184c668b9ee2(float arg1, float arg2, swig_voidp arg3, swig_voidp arg4);
extern swig_intgo _wrap_Decode_SetOnDataCallback_fclib_a388184c668b9ee2(swig_voidp arg1);
extern void _wrap_Decode_EnableMonitorAudio_fclib_a388184c668b9ee2(swig_intgo arg1);
extern void _wrap_Decode_RemoveDCOffset_fclib_a388184c668b9ee2(swig_intgo arg1);
extern swig_intgo _wrap_Decode_RefreshAudioDevices_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Decode_IsStarted_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Decode_SetTrackingParams_fclib_a388184c668b9ee2(swig_intgo arg1);
extern void _wrap_Decode_SetPeakDetectParams_fclib_a388184c668b9ee2(swig_intgo arg1, double arg2);
extern swig_intgo _wrap_Decode_SetWorkerCount_fclib_a388184c668b9ee2(int arg1);
extern swig_intgo _wrap_Decode_GetWorkerPeaks_fclib_a388184c668b9ee2(swig_voidp arg1, swig_voidp arg2);
extern swig_intgo _wrap_Decode_GetWorkerAvailability_fclib_a388184c668b9ee2(swig_voidp arg1, swig_voidp arg2);
extern swig_intgo _wrap_Decode_ExcludePeaks_fclib_a388184c668b9ee2(swig_voidp arg1, swig_voidp arg2);
extern swig_intgo _wrap_Decode_SetOnDataReadyCallback_fclib_a388184c668b9ee2(swig_voidp arg1);
extern swig_intgo _wrap_Decode_CollectLastData_fclib_a388184c668b9ee2(swig_voidp arg1, swig_voidp arg2, swig_voidp arg3, swig_voidp arg4);
extern swig_type_3 _wrap_Decode_LastError_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Encode_Initialize_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Encode_Shutdown_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Encode_CanCollect_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Encode_AllDataCollected_fclib_a388184c668b9ee2(void);
extern swig_intgo _wrap_Encode_CollectSamples_fclib_a388184c668b9ee2(swig_voidp arg1, swig_voidp arg2);
extern swig_intgo _wrap_Encode_PushData_fclib_a388184c668b9ee2(swig_voidp arg1, int arg2);
extern uintptr_t _wrap__swig_NewDirectorCallbackShimCallbackShim_fclib_a388184c668b9ee2(int);
extern void _wrap_DeleteDirectorCallbackShim_fclib_a388184c668b9ee2(uintptr_t arg1);
extern void _wrap__swig_DirectorCallbackShim_upcall_Run_fclib_a388184c668b9ee2(uintptr_t);
extern void _wrap_delete_CallbackShim_fclib_a388184c668b9ee2(uintptr_t arg1);
extern void _wrap_CallbackShim_run_fclib_a388184c668b9ee2(uintptr_t arg1);
extern uintptr_t _wrap_new_CallbackShim_fclib_a388184c668b9ee2(void);
extern void _wrap_g_shimInstance_set_fclib_a388184c668b9ee2(uintptr_t arg1);
extern uintptr_t _wrap_g_shimInstance_get_fclib_a388184c668b9ee2(void);
extern void _wrap_OnDataReadyShim_fclib_a388184c668b9ee2(void);
extern void _wrap_CleanupCallbackShim_fclib_a388184c668b9ee2(void);
extern void _wrap_InitialiseCallbackShim_fclib_a388184c668b9ee2(uintptr_t arg1);
extern void _wrap_RunCallback_fclib_a388184c668b9ee2(void);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_fclib_a388184c668b9ee2(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_fclib_a388184c668b9ee2(C.swig_intgo(_swig_i_0)))
	return swig_r
}

const FALSE int = 0
const TRUE int = 1
func TimeGetTime() (_swig_ret uint32) {
	var swig_r uint32
	swig_r = (uint32)(C._wrap_timeGetTime_fclib_a388184c668b9ee2())
	return swig_r
}

const S_FALSE int = 0
const S_OK int = 1
const E_FAIL int = 0
func GetHZ_PER_BIN() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_HZ_PER_BIN_get_fclib_a388184c668b9ee2())
	return swig_r
}

func GetPI() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_PI_get_fclib_a388184c668b9ee2())
	return swig_r
}

func GetHALF_PI() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_HALF_PI_get_fclib_a388184c668b9ee2())
	return swig_r
}

func GetTWO_PI() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_TWO_PI_get_fclib_a388184c668b9ee2())
	return swig_r
}

const BLOCK_SIZE int = 256
const FEC_BLOCK_SIZE int = 650
const PREAMBLE_SIZE int = 768
const SYNC_VECTOR int = 0x1acffc1d
const SYNC_VECTOR_SIZE int = 32
func LogMessage(arg1 int, arg2 Std_string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LogMessage_fclib_a388184c668b9ee2(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1))
}

const MASK_FFT_RANGE_LIMIT int = 0x07
const MASK_FFT_TUNER int = 0x30
const MASK_PREMIX_ENABLE int = 0x40
type FFTRangeLimit int
func _swig_getFFTRangeLimit_Off() (_swig_ret FFTRangeLimit) {
	var swig_r FFTRangeLimit
	swig_r = (FFTRangeLimit)(C._wrap_FFTRangeLimit_Off_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTRangeLimit_Off FFTRangeLimit = _swig_getFFTRangeLimit_Off()
func _swig_getFFTRangeLimit_010() (_swig_ret FFTRangeLimit) {
	var swig_r FFTRangeLimit
	swig_r = (FFTRangeLimit)(C._wrap_FFTRangeLimit_010_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTRangeLimit_010 FFTRangeLimit = _swig_getFFTRangeLimit_010()
func _swig_getFFTRangeLimit_020() (_swig_ret FFTRangeLimit) {
	var swig_r FFTRangeLimit
	swig_r = (FFTRangeLimit)(C._wrap_FFTRangeLimit_020_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTRangeLimit_020 FFTRangeLimit = _swig_getFFTRangeLimit_020()
func _swig_getFFTRangeLimit_040() (_swig_ret FFTRangeLimit) {
	var swig_r FFTRangeLimit
	swig_r = (FFTRangeLimit)(C._wrap_FFTRangeLimit_040_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTRangeLimit_040 FFTRangeLimit = _swig_getFFTRangeLimit_040()
func _swig_getFFTRangeLimit_080() (_swig_ret FFTRangeLimit) {
	var swig_r FFTRangeLimit
	swig_r = (FFTRangeLimit)(C._wrap_FFTRangeLimit_080_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTRangeLimit_080 FFTRangeLimit = _swig_getFFTRangeLimit_080()
func _swig_getFFTRangeLimit_140() (_swig_ret FFTRangeLimit) {
	var swig_r FFTRangeLimit
	swig_r = (FFTRangeLimit)(C._wrap_FFTRangeLimit_140_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTRangeLimit_140 FFTRangeLimit = _swig_getFFTRangeLimit_140()
func _swig_getFFTRangeLimit_200() (_swig_ret FFTRangeLimit) {
	var swig_r FFTRangeLimit
	swig_r = (FFTRangeLimit)(C._wrap_FFTRangeLimit_200_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTRangeLimit_200 FFTRangeLimit = _swig_getFFTRangeLimit_200()
func _swig_getFFTRangeLimit_Slope() (_swig_ret FFTRangeLimit) {
	var swig_r FFTRangeLimit
	swig_r = (FFTRangeLimit)(C._wrap_FFTRangeLimit_Slope_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTRangeLimit_Slope FFTRangeLimit = _swig_getFFTRangeLimit_Slope()
type FFTTunerState int
func _swig_getFFTTunerState_Off() (_swig_ret FFTTunerState) {
	var swig_r FFTTunerState
	swig_r = (FFTTunerState)(C._wrap_FFTTunerState_Off_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTTunerState_Off FFTTunerState = _swig_getFFTTunerState_Off()
func _swig_getFFTTunerState_On() (_swig_ret FFTTunerState) {
	var swig_r FFTTunerState
	swig_r = (FFTTunerState)(C._wrap_FFTTunerState_On_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTTunerState_On FFTTunerState = _swig_getFFTTunerState_On()
func _swig_getFFTTunerState_Lock() (_swig_ret FFTTunerState) {
	var swig_r FFTTunerState
	swig_r = (FFTTunerState)(C._wrap_FFTTunerState_Lock_fclib_a388184c668b9ee2())
	return swig_r
}

var FFTTunerState_Lock FFTTunerState = _swig_getFFTTunerState_Lock()
func Library_GetVersion() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_Library_GetVersion_fclib_a388184c668b9ee2())
	return swig_r
}

func Library_CheckFftwExists() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Library_CheckFftwExists_fclib_a388184c668b9ee2())
	return swig_r
}

func Library_SetOnLogMessageCallback(arg1 *_swig_fnptr) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Library_SetOnLogMessageCallback_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0)))
	return swig_r
}

func Dongle_Initialize() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Dongle_Initialize_fclib_a388184c668b9ee2())
	return swig_r
}

func Dongle_Shutdown() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Dongle_Shutdown_fclib_a388184c668b9ee2())
	return swig_r
}

func Dongle_Exists() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Dongle_Exists_fclib_a388184c668b9ee2())
	return swig_r
}

func Dongle_GetFrequency() (_swig_ret uint32) {
	var swig_r uint32
	swig_r = (uint32)(C._wrap_Dongle_GetFrequency_fclib_a388184c668b9ee2())
	return swig_r
}

func Dongle_SetFrequency(arg1 uint32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Dongle_SetFrequency_fclib_a388184c668b9ee2(C.int(_swig_i_0)))
	return swig_r
}

func Dongle_BiasTEnable(arg1 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Dongle_BiasTEnable_fclib_a388184c668b9ee2(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func Decode_Initialize() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Decode_Initialize_fclib_a388184c668b9ee2())
	return swig_r
}

func Decode_Shutdown() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Decode_Shutdown_fclib_a388184c668b9ee2())
	return swig_r
}

func Decode_EnumDevices(arg1 *_swig_fnptr) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Decode_EnumDevices_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0)))
	return swig_r
}

func Decode_Start(arg1 string, arg2 string, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Decode_Start_fclib_a388184c668b9ee2(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func Decode_StartByIndex(arg1 int, arg2 int, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Decode_StartByIndex_fclib_a388184c668b9ee2(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func Decode_Stop() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Decode_Stop_fclib_a388184c668b9ee2())
	return swig_r
}

func Decode_SetManualTuneFrequency(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_Decode_SetManualTuneFrequency_fclib_a388184c668b9ee2(C.float(_swig_i_0))
}

func Decode_SetAutoTuneFrequencyRange(arg1 float32, arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Decode_SetAutoTuneFrequencyRange_fclib_a388184c668b9ee2(C.float(_swig_i_0), C.float(_swig_i_1))
}

func Decode_CollectFftOutput(arg1 *float32, arg2 *uint32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Decode_CollectFftOutput_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func Decode_CollectFftOutputByRange(arg1 float32, arg2 float32, arg3 *float32, arg4 *uint32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Decode_CollectFftOutputByRange_fclib_a388184c668b9ee2(C.float(_swig_i_0), C.float(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func Decode_SetOnDataCallback(arg1 *_swig_fnptr) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Decode_SetOnDataCallback_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0)))
	return swig_r
}

func Decode_EnableMonitorAudio(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_Decode_EnableMonitorAudio_fclib_a388184c668b9ee2(C.swig_intgo(_swig_i_0))
}

func Decode_RemoveDCOffset(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_Decode_RemoveDCOffset_fclib_a388184c668b9ee2(C.swig_intgo(_swig_i_0))
}

func Decode_RefreshAudioDevices() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Decode_RefreshAudioDevices_fclib_a388184c668b9ee2())
	return swig_r
}

func Decode_IsStarted() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Decode_IsStarted_fclib_a388184c668b9ee2())
	return swig_r
}

func Decode_SetTrackingParams(arg1 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Decode_SetTrackingParams_fclib_a388184c668b9ee2(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func Decode_SetPeakDetectParams(arg1 uint, arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Decode_SetPeakDetectParams_fclib_a388184c668b9ee2(C.swig_intgo(_swig_i_0), C.double(_swig_i_1))
}

func Decode_SetWorkerCount(arg1 uint32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Decode_SetWorkerCount_fclib_a388184c668b9ee2(C.int(_swig_i_0)))
	return swig_r
}

func Decode_GetWorkerPeaks(arg1 *float32, arg2 *uint32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Decode_GetWorkerPeaks_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func Decode_GetWorkerAvailability(arg1 *uint, arg2 *uint32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Decode_GetWorkerAvailability_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func Decode_ExcludePeaks(arg1 *float32, arg2 *uint32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Decode_ExcludePeaks_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func Decode_SetOnDataReadyCallback(arg1 *_swig_fnptr) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Decode_SetOnDataReadyCallback_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0)))
	return swig_r
}

func Decode_CollectLastData(arg1 *byte, arg2 *uint32, arg3 *float32, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Decode_CollectLastData_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func Decode_LastError() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_Decode_LastError_fclib_a388184c668b9ee2()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func Encode_Initialize() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Encode_Initialize_fclib_a388184c668b9ee2())
	return swig_r
}

func Encode_Shutdown() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Encode_Shutdown_fclib_a388184c668b9ee2())
	return swig_r
}

func Encode_CanCollect() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Encode_CanCollect_fclib_a388184c668b9ee2())
	return swig_r
}

func Encode_AllDataCollected() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Encode_AllDataCollected_fclib_a388184c668b9ee2())
	return swig_r
}

func Encode_CollectSamples(arg1 *byte, arg2 *uint32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Encode_CollectSamples_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func Encode_PushData(arg1 *byte, arg2 uint32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Encode_PushData_fclib_a388184c668b9ee2(C.swig_voidp(_swig_i_0), C.int(_swig_i_1)))
	return swig_r
}

type _swig_DirectorCallbackShim struct {
	SwigcptrCallbackShim
	v interface{}
}

func (p *_swig_DirectorCallbackShim) Swigcptr() uintptr {
	return p.SwigcptrCallbackShim.Swigcptr()
}

func (p *_swig_DirectorCallbackShim) SwigIsCallbackShim() {
}

func (p *_swig_DirectorCallbackShim) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorCallbackShim(v interface{}) CallbackShim {
	p := &_swig_DirectorCallbackShim{0, v}
	p.SwigcptrCallbackShim = SwigcptrCallbackShim(C._wrap__swig_NewDirectorCallbackShimCallbackShim_fclib_a388184c668b9ee2(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorCallbackShim(arg1 CallbackShim) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_DeleteDirectorCallbackShim_fclib_a388184c668b9ee2(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_CallbackShim_fclib_a388184c668b9ee2
func Swiggo_DeleteDirector_CallbackShim_fclib_a388184c668b9ee2(c int) {
	swigDirectorLookup(c).(*_swig_DirectorCallbackShim).SwigcptrCallbackShim = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceCallbackShimRun interface {
	Run()
}

func (swig_p *_swig_DirectorCallbackShim) Run() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceCallbackShimRun); swig_ok {
		swig_g.Run()
		return
	}
	C._wrap__swig_DirectorCallbackShim_upcall_Run_fclib_a388184c668b9ee2(C.uintptr_t(swig_p.SwigcptrCallbackShim))
}

func DirectorCallbackShimRun(p CallbackShim) {
	C._wrap__swig_DirectorCallbackShim_upcall_Run_fclib_a388184c668b9ee2(C.uintptr_t(p.(*_swig_DirectorCallbackShim).SwigcptrCallbackShim))
}

//export Swig_DirectorCallbackShim_callback_run_fclib_a388184c668b9ee2
func Swig_DirectorCallbackShim_callback_run_fclib_a388184c668b9ee2(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorCallbackShim)
	swig_p.Run()
}

type SwigcptrCallbackShim uintptr

func (p SwigcptrCallbackShim) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCallbackShim) SwigIsCallbackShim() {
}

func (p SwigcptrCallbackShim) DirectorInterface() interface{} {
	return nil
}

func DeleteCallbackShim(arg1 CallbackShim) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_CallbackShim_fclib_a388184c668b9ee2(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrCallbackShim) Run() {
	_swig_i_0 := arg1
	C._wrap_CallbackShim_run_fclib_a388184c668b9ee2(C.uintptr_t(_swig_i_0))
}

func NewCallbackShim() (_swig_ret CallbackShim) {
	var swig_r CallbackShim
	swig_r = (CallbackShim)(SwigcptrCallbackShim(C._wrap_new_CallbackShim_fclib_a388184c668b9ee2()))
	return swig_r
}

type CallbackShim interface {
	Swigcptr() uintptr
	SwigIsCallbackShim()
	DirectorInterface() interface{}
	Run()
}

func SetG_shimInstance(arg1 CallbackShim) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_g_shimInstance_set_fclib_a388184c668b9ee2(C.uintptr_t(_swig_i_0))
}

func GetG_shimInstance() (_swig_ret CallbackShim) {
	var swig_r CallbackShim
	swig_r = (CallbackShim)(SwigcptrCallbackShim(C._wrap_g_shimInstance_get_fclib_a388184c668b9ee2()))
	return swig_r
}

func OnDataReadyShim() {
	C._wrap_OnDataReadyShim_fclib_a388184c668b9ee2()
}

func CleanupCallbackShim() {
	C._wrap_CleanupCallbackShim_fclib_a388184c668b9ee2()
}

func InitialiseCallbackShim(arg1 CallbackShim) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_InitialiseCallbackShim_fclib_a388184c668b9ee2(C.uintptr_t(_swig_i_0))
}

func RunCallback() {
	C._wrap_RunCallback_fclib_a388184c668b9ee2()
}


type SwigcptrSwigDirector_CallbackShim uintptr
type SwigDirector_CallbackShim interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_CallbackShim) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_string uintptr
type Std_string interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_string) Swigcptr() uintptr {
	return uintptr(p)
}



var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}


